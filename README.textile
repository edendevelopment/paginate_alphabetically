h2. PaginateAlphabetically

An easy way to paginate a list of ActiveRecord objects alphabetically by any given attribute.


h2. Example

h3. Model

bc. class User < ActiveRecord::Base
  paginate_alphabetically :by => :surname
end

h3. Controller

bc. class UsersController < ApplicationController
  def index
    @users = User.alphabetical_group(params[:letter])
  end
end

h3. View (haml example)

bc. = alphabetically_paginate(@users)
%ul.users
  - @users.each do |user|
    %li= user.surname


h2. Testing

The tests use a sqlite3 in-memory database to be able to run separately from your application.

bc. rake test

h2. Options

The initial model code will take a show_all_letters option, in order to skip the (slow) letter finding code:

bc. class User < ActiveRecord::Base
  paginate_alphabetically :by => :surname, :show_all_letters => true
end

To use alphanumeric functionality use numeric => true

bc. class User < ActiveRecord::Base
  paginate_alphabetically :by => :surname, :numeric => true
end

Thanks to "hoverlover":http://github.com/hoverlover the alphabetically_paginate view helper can take an options hash which allows you to override the class if you don't want it to be 'pagination'. For example:

bc. = alphabetically_paginate(@users, :class => 'user-pagination')

bc. = alphabetically_paginate(@users, :class => 'user-pagination', :numeric => true)

h2. Contributing

We welcome feedback, issues and especially pull requests. Please make sure your change is tested. Please do not update the VERSION file - we'll do that automatically. Thanks!


Copyright (c) 2010 Eden Development, released under the MIT license
